=content_for(:head) do
    = render "shared/map"
    = javascript_include_tag "map"
    = stylesheet_link_tag "jorc"
    %script{:type => "text/javascript"}
        init_opts = {
        - unless @deposit.geom == nil
            longitude: #{@deposit.longitude},
            latitude: #{@deposit.latitude},
            zoom: 14
        - else
            longitude: 149.158362,
            latitude: -35.344028,
            zoom: 17
        }
        $(document).ready(function(){initialize(init_opts);});
%p
    #map.smallmap
    #latlong Click map for coordinates 
    - if (current_user && current_user.ozmin?) && !@current_resources.empty?
        %h3 Identified Resources
        - identified_resource = IdentifiedResourceSet.new(@current_resources)
        %table{:class=>:resource}
            %tr
                %th Commodity
                %th Type
                %th Units
                %th Reserves
                %th EDR
                %th Para-marginal
                %th Sub-marginal
                %th Inferred
            - identified_resource.each_key do |commodity|
                %tr
                    %td{:rowspan=>3}= commodity
                    %td Ore
                    %td= identified_resource[commodity].first.units[:ore]
                    %td= "%.2f" % identified_resource.reserves[commodity][:ore]
                    %td= "%.2f" % identified_resource.economic[commodity][:ore]
                    %td= "%.2f" % identified_resource.paramarginal[commodity][:ore]
                    %td= "%.2f" % identified_resource.submarginal[commodity][:ore]
                    %td= "%.2f" % identified_resource.inferred[commodity][:ore]
                %tr
                    %td Mineral
                    %td= identified_resource[commodity].first.units[:mineral]
                    %td= "%.2f" % identified_resource.reserves[commodity][:mineral]
                    %td= "%.2f" % identified_resource.economic[commodity][:mineral]
                    %td= "%.2f" % identified_resource.paramarginal[commodity][:mineral]
                    %td= "%.2f" % identified_resource.submarginal[commodity][:mineral]
                    %td= "%.2f" % identified_resource.inferred[commodity][:mineral]
                %tr
                    %td Grade
                    %td= identified_resource[commodity].first.units[:grade]
                    %td= "%.2f" % identified_resource.reserves[commodity][:grade]
                    %td= "%.2f" % identified_resource.economic[commodity][:grade]
                    %td= "%.2f" % identified_resource.paramarginal[commodity][:grade]
                    %td= "%.2f" % identified_resource.submarginal[commodity][:grade]
                    %td= "%.2f" % identified_resource.inferred[commodity][:grade]
- content_for(:sidebar) do
    %p
        %h2= @deposit.name
        %table{:width=>"100%"}
            - if @deposit.deposit_status.synonyms
                %tr
                    %td Synonyms
                    %td= @deposit.deposit_status.synonyms
            %tr
                %td State
                %td= @deposit.deposit_status.state
            %tr
                %td Commodities
                %td= @deposit.commodity_list.commodids rescue nil
            %tr
                %td Commodity Names
                %td= @deposit.commodity_list.commodnames rescue nil
            %tr
                %td Operating Status
                %td= @deposit.deposit_status.operating_status.titleize
    - unless @deposit.geom.nil?
        %h3 Location
        %table{:width=>"100%"}
            %tr
                %td Longitude
                %td= "%3.6f" % @deposit.longitude
            %tr
                %td Latitude
                %td= "%3.6f" % @deposit.latitude
            %tr
                %td Datum
                %td GDA94
    %br
    - status = @deposit.deposit_status.operating_status
    - if @deposit.access_code != "O" or @deposit.qa_status_code == "U" or @deposit.deposit_status.restricted == "Y" or !DepositStatus.atlas_statuses.values.include?(status) or @deposit.geom.nil?
        %div.warn
            This #{status} is not visible in the Mines Atlas because
            %ul
                - if @deposit.access_code != "O"
                    %li it is flagged confidential
                - if @deposit.qa_status_code == "U"
                    %li it has not been QAed
                - if @deposit.deposit_status.restricted == "Y"
                    %li it is flagged as restricted
                - if @deposit.geom == nil
                    %li it has no coordinates
                - if !DepositStatus.atlas_statuses.values.include?(status)
                    %li== it is not an #{DepositStatus.statuses.values.compact.to_sentence(:last_word_connector=>", or ")}
    - else
        %p
            %i
                %a{:href=>"http://www.australianminesatlas.gov.au/?site=atlas&x=#{@deposit.longitude}&y=#{@deposit.latitude}&z=2.565"} View in Mines Atlas
    %h3 Provinces
    - unless @provinces.empty?
        %ul
            - @provinces.each do |province|
                %li= link_to province.entityid, province
    - else
        %p
            %i There are no provinces associated with this deposit.
    - unless @weblinks.length == 0
        %h3 Links of interest
        %ul
            - @weblinks.each do |w|
                %li
                    %a{:href=>w.website.url}= w.website.description
    - unless @zone_array.empty?
        - @zone_array.each do |zones|
            - zones.each do |zone|
                - @zone=zone
                - @resource=@zone.resources.first
                = print_zone_for_show
                - unless @resource.nil? || @resource.zero?
                    = render('resources/resource')
    - else
        %p
            %i There are no mineralised zones associated with this deposit
    -#%h3 Files
        -# bloblinks = @deposit.bloblinks
        -# bloblinks.each do |bloblink|
            -# blob = Blob.safe(bloblink.blobno).first
            //%p= blob.name
            =# link_to 'Show', blob
- content_for(:controller_nav) do
    %p= render :partial => "deposits/links"
- content_for(:title_bar) do
    ==Deposits: #{@deposit.name} (#{@deposit.eno})