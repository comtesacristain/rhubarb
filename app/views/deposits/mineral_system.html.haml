- commodity_headers = ["PRODUCTION","PRODUNIT","PRODYEAR","RESOURCES","GRADE","GRADEUNIT","TOTCOMMOD","TOTUNIT","REMARK","PRODMONTH","PRODDATE","PRODORE",
	"PRODOREUNIT","PRODGRADE","PRODGRADEUNIT","PRODTOTAL","PRODTOTALUNIT","RESDATE","RESORE","RESOREUNIT","RESGRADE","RESGRADEUNIT","GLOBALORE",
	"GLOBALOREUNIT","GLOBALGRADE","GLOBALGRADEUNIT","GLOBALTOTAL","GLOBALTOTALUNIT"]
- commod = String.new
- aliased_commodities = CommodityType.aliases
- if aliased_commodities.include?(params[:commodity])
    - commod=aliased_commodities[params[:commodity]]
- else
    - commod=params[:commodity].split if params[:commodity]
- if params[:commodity].nil? || params[:commodity] == "All"
    %p{:style=>"color: green;"} You must select a <b>Commodity</b>
%p
    %table
        %tr
            %th.fixed &nbsp;
            %th.fixed Name
            %th.fixed Longitude
            %th.fixed Latitude
            %th.fixed Commodities
            %th.fixed Region name
            %th.fixed Mineral Age Group
            %th.fixed Mineral System Group
            %th.fixed Mineral System Subgroup
            %th.fixed Mineral System Type
            %th.fixed Classification
            %th.fixed Deposit Type
            - unless commod[0] == "All"
                - i = 0
                - while i < commod.length
                    - j = 0
                    - while j < commodity_headers.length
                        %th= commod[i]+"_"+commodity_headers[j]
                        - j += 1
                    - i += 1
        - for deposit in @deposits
            %tr
                %td.fixed= h deposit.eno
                %td.fixed=link_to deposit.entityid, deposit
                %td.fixed= "%3.4f" % deposit.try(:longitude) if deposit.geom != nil
                %td.fixed= "%3.4f" % deposit.try(:latitude) if deposit.geom != nil
                %td.fixed= h deposit.commodity_list.try(:commodnames)
                %td.fixed= deposit.regname
                %td.fixed= deposit.minage_gp
                %td.fixed= deposit.minsys_gp
                %td.fixed= deposit.minsys_sgp
                %td.fixed= deposit.minsys_typ
                %td.fixed= deposit.classification
                %td.fixed= deposit.deposit_type
                - unless commod[0] == "All"
                    - i = 0
                    - while i< commod.length
                        - commodity = deposit.commodities.mineral commod[i]
                        %td.fixed= commodity.first.try(:production)
                        %td.fixed= commodity.first.try(:produnit)
                        %td.fixed= commodity.first.try(:prodyear)
                        %td.fixed= commodity.first.try(:resources)
                        %td.fixed= commodity.first.try(:grade)
                        %td.fixed= commodity.first.try(:gradeunit)
                        %td.fixed= commodity.first.try(:totcommod)
                        %td.fixed= commodity.first.try(:totunit)
                        %td.fixed= commodity.first.try(:remark)
                        %td.fixed= commodity.first.try(:prodmonth)
                        %td.fixed= commodity.first.try(:proddate)
                        %td.fixed= commodity.first.try(:prodore)
                        %td.fixed= commodity.first.try(:prodoreunit)
                        %td.fixed= commodity.first.try(:prodgrade)
                        %td.fixed= commodity.first.try(:prodgradeunit)
                        %td.fixed= commodity.first.try(:prodtotal)
                        %td.fixed= commodity.first.try(:prodtotalunit)
                        %td.fixed=  commodity.first.try(:resdate)
                        %td.fixed=  commodity.first.try(:resore)
                        %td.fixed=  commodity.first.try(:resoreunit)
                        %td.fixed=  commodity.first.try(:resgrade)
                        %td.fixed=  commodity.first.try(:resgradeunit)
                        %td.fixed=  commodity.first.try(:globalore)
                        %td.fixed=  commodity.first.try(:globaloreunit)
                        %td.fixed=  commodity.first.try(:globalgrade)
                        %td.fixed=  commodity.first.try(:globalgradeunit)
                        %td.fixed=  commodity.first.try(:globaltotal)
                        %td.fixed=  commodity.first.try(:globaltotalunit)
                        - i += 1
- content_for(:sidebar) do
    %p= render :partial => "deposits/query"
- content_for(:controller_nav) do
    %p= render :partial => "deposits/links"
- content_for(:sidebar_download) do
    %p= render :partial => "deposits/format"
%p= will_paginate @deposits
                