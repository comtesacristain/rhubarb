<%- type = [] -%>
<%- type = params[:type]  if  params[:type] -%>
<%- resource = [] -%>
<%- resource = params[:resource]  if  params[:resource] -%>
<%- aliased_commodities = CommodityType.aliases -%>
<%- commod = String.new -%>
<%- if aliased_commodities.include?(params[:commodity]) -%>
  <%- commod=aliased_commodities[params[:commodity]] -%>
<%- else -%>
  <%- commod=params[:commodity].split if params[:commodity] -%>
<%- end -%>
<%- headers = ["ENO", "NAME", "SYNONYMS", "STATE", "OPSTATUS", "LONGITUDE", "LATITUDE", "COMMODIDS"] -%>
<%- unless commod[0] == "All" -%>
  <%- i = 0 -%>
  <%- while i < commod.length -%>
    <%- j = 0 -%>
    <%- while j < resource.length -%>
      <%- k = 0 -%>
      <%- while k < type.length -%>
        <%- headers << commod[i]+"_"+resource[j].upcase+"_"+type[k].upcase -%>
        <%- k += 1 -%>
      <%- end -%>
      <%- j += 1 -%>
    <%- end -%>
    <%- k = 0 -%>
    <%- while k < type.length -%>
      <%- headers <<  commod[i]+"_"+type[k].upcase+"_UNITS" -%>
      <%- k += 1 -%>
    <%- end -%>
    <%- headers << commod[i]+"_REPORTED_COMMODITY" << commod[i]+"_RESOURCEDATE" << commod[i]+"_MATERIAL" -%>
    <%- i += 1 -%>
  <%- end -%>
<%- end -%>
<%= raw FasterCSV.generate_line headers, :row_sep => "\r" -%>
<%- @deposits.each do |deposit| -%>
  <%- row = [deposit.eno, deposit.entityid, deposit.deposit_status.try(:synonyms), deposit.deposit_status.try(:state), deposit.deposit_status.try(:operating_status), deposit.longitude, deposit.latitude, deposit.commodity_list.try(:commodids)] -%>
  <%- if commod!="All" -%>
    <%- i = 0 -%>
    <%- while i < commod.length -%>
      <%- resources = Resource.grade(commod[i], params[:year], {:eno=>deposit.eno}) -%>
      <%- grade = IdentifiedResource.new -%>
      <%- grade.set_resources(resources) -%>
      <%- if resources.first -%>
        <%- j = 0 -%>
        <%- while j < resource.length -%>
          <%- k = 0 -%>
          <%- while k < type.length -%>
            <%- value = grade.try(resource[j]+"_"+type[k])/grade.try(type[k]+"_factor") rescue 0-%>
            <%- row <<  value -%>
            <%- k += 1 -%>
          <%- end -%>
          <%- j += 1 -%>
        <%- end -%>
        <%- k = 0 -%>
        <%- while k < type.length -%>
          <%- row << grade.try(type[k]+"_unit") -%>
          <%- k += 1 -%>
        <%- end -%>
        <%- row << grade.try(:commodity) << grade.try(:recorddate) << grade.try(:material) -%>
      <%- else -%>
        <%- blank_cells_length = ((type.length * resource.length)+type.length + 3) -%>
        <%- cells = 0 -%>
        <%- while cells < blank_cells_length -%>
          <%- row << "" -%>
          <%- cells += 1 -%>
        <%- end -%>
      <%- end -%>
      <%- i += 1 -%>
    <%- end -%>
  <%- end -%>
  <%= raw FasterCSV.generate_line row, :row_sep => "\r" -%>
<%- end -%>